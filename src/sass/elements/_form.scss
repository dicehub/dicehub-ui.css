.form {
  &-group {
    margin-bottom: var(--control-margin);
    position: relative;
    display: block;

    &.is-inline {
      display: flex;
      align-items: flex-start;

      .form-label {
        width: 16rem;
      }
    }
  }

  &-field {
    position: relative;
    width: 100%;
    display: flex;
  }

  &-path {
    @include control-reset();

    background-color: toThemeColor(form-path-bg);
    border: var(--control-border-width) solid toThemeColor(border);
    font-size: var(--control-font-size);
    padding: .6em 1em;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-right: none;

    & ~ .form-control {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    &.is-medium {
      font-size: calc(var(--control-font-size) * var(--medium-multiplier));
    }

    &.is-large {
      font-size: calc(var(--control-font-size) * var(--large-multiplier));
    }
  }

  &-prefix,
  &-suffix {
    font-size: .9em;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    color: toThemeColor(form-prefix);

    .u-svg-icon {
      vertical-align: top;
    }
  }

  &-prefix {
    left: .6em;

    & ~ .form-control {
      padding-left: 2em;
    }
  }

  &-suffix {
    right: .6em;

    & ~ .form-control {
      padding-right: 2.5em;
    }
  }

  &-control {
    @include control-reset;
    @include control-transition;

    width: 100%;
    border: var(--control-border-width) solid toThemeColor(border);
    font-size: var(--control-font-size);
    padding: .6em 1em;

    &.is-disabled,
    &[disabled] {
      opacity: .7;
      cursor: not-allowed;
      color: toThemeColor(text) !important;
      background-color: transparent !important;
      border-color: toThemeColor(border) !important;
    }

    &:hover {
      border-color: toThemeColor(accent, .7);
      background-color: toThemeColor(accent, .05);
    }

    &:focus {
      border-color: toThemeColor(accent);
      box-shadow: 0 0 3px toThemeColor(accent, .7);
    }

    &.is-success { @include form-control-color(success); }
    &.is-warning { @include form-control-color(warning); }
    &.is-danger { @include form-control-color(danger); }

    &.is-medium {
      font-size: calc(var(--control-font-size) * var(--medium-multiplier));
    }

    &.is-large {
      font-size: calc(var(--control-font-size) * var(--large-multiplier));
    }

    &:matches(textarea) {
      max-width: 100%;
      width: 100%;
      resize: vertical;
    }
  }

  &-label {
    font-size: 1.4rem;
    width: 100%;
    flex-shrink: 0;
    padding-top: 0.7em;
    display: block;
    color: toThemeColor(text);
    margin-bottom: 0.6em;
  }

  &-actions {
    display: flex;
    align-items: center;

    :not(:last-child) {
      margin-right: 1rem;
    }
  }
}

.radio-field,
.checkbox-field {
  cursor: pointer;
  display: inline-flex;
  align-items: flex-start;
  line-height: 1.3;

  input[type='checkbox'],
  input[type='radio'] {
    @include hidden-input;
  }

  & + & {
    margin-left: 2rem;
  }
}

.checkbox,
.radio {
  background-color: toThemeColor(form-radio-bg);
  width: 1.7rem;
  height: 1.7rem;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: toThemeColor(border);
  border: 1px solid currentColor;
  flex-shrink: 0;
  transition-property: color, border-color, background-color;
  margin: 0.2em;

  &:not(:last-child) {
    margin-right: 7px;
  }
}

.checkbox {
  font-size: 1.1rem;

  input[type='checkbox']:checked + & {
    color: toThemeColor(accent);

    svg {
      opacity: 1;
      transform: none;
    }
  }

  svg {
    opacity: 0;
    transform: translateY(1px) scale(0.5);
    transition-property: opacity, transform;
  }
}

.radio {
  position: relative;
  border-radius: 50%;

  &::after {
    content: '';
    width: .7rem;
    height: .7rem;
    border-radius: 50%;
    background-color: toThemeColor(accent);
    transform: scale(0);

    transition-property: transform;
  }

  input[type='radio']:checked + & {
    color: toThemeColor(accent);
  }

  input[type='radio']:checked + &::after {
    transform: scale(1);
  }
}

.switch {
  display: inline-flex;
  align-items: center;
  cursor: pointer;

  input {
    @include hidden-input;
  }

  &-box {
    width: 2.7rem;
    height: 1.6rem;
    display: inline-block;
    border-radius: .8rem;
    background-color: toThemeColor(form-switch-box-bg);
    position: relative;
    transition-property: background-color;

    & + * {
      margin-left: 1rem;
    }

    &::after {
      content: '';
      display: block;
      width: 1.4rem;
      height: 1.4rem;
      background-color: toThemeColor(form-switch);
      position: absolute;
      left: 1px;
      top: 1px;
      border-radius: 50%;
      transition-property: left;
    }
  }

  input:checked + &-box {
    background-color: toThemeColor(accent);

    &::after {
      left: 1.2rem;
    }
  }
}
