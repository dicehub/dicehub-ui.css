@mixin word-wrap {
  white-space: normal;
  word-wrap: break-word;
  word-break: break-word;
  max-width: 100%;
}

@mixin clearfix {
  zoom: 1;

  &::before,
  &::after {
    content: '';
    display: block;
    height: 0;
    overflow: hidden;
  }

  &::after {
    clear: both;
  }
}

@mixin svg-icon {
  width: 1em;
  height: 1em;
  fill: currentColor;

  display: inline-block;
  // vertical-align: middle;
}

@mixin img-fit {
  object-fit: cover;
  object-position: center;
}

@mixin button-reset {
  background-color: transparent;
  display: inline-block;
  vertical-align: middle;
  border: none;
  font: var(--font);
  // outline: none;
  padding: 0;
  cursor: pointer;
  color: inherit;
}

@mixin control-reset {
  background-color: toThemeColor(form-control-bg);
  display: inline-block;
  vertical-align: middle;
  border: none;
  font: inherit;
  outline: none;
  padding: 0;
  width: auto;
  white-space: nowrap;
  color: inherit;
  line-height: normal;

  border-radius: var(--control-radius);

  &:focus {
    @include focus-outline;
  }
}

@mixin control-transition {
  transition-property: color, background-color, box-shadow, border-color;
}

@mixin button-color($color) {
  background-color: toThemeColor($color);
  color: toThemeColor(button-color);

  &.is-outline {
    border-color: toThemeColor($color, .7);
    background-color: transparent;
    color: toThemeColor(button-outline-color);
  }

  &:hover:not(.is-loading-active) {
    color: toThemeColor(button-state-color);
    background-color: toThemeColor($color + -hover);
    border-color: transparent;
  }

  &:active:not(.is-loading-active) {
    background-color: toThemeColor($color + -active);
    color: toThemeColor(button-state-color);
  }
}

@mixin form-control-color($color) {
  border-color: toThemeColor($color);
  box-shadow: 0 0 2px toThemeColor($color);

  &:hover,
  &:focus {
    background-color: transparent;
  }
}

@mixin hidden-input {
  position: absolute;
  // visibility: hidden;
  overflow: hidden;
  opacity: 0;
  width: 0;
  height: 0;
  margin: 0;
}

@mixin alert($style) {
  &.is-#{$style} {
    color: toThemeColor($style);
    background-color: toThemeColor($style, .2);
    border-color: toThemeColor($style);
  }

  &.is-#{$style} &-dismiss {
    color: toThemeColor($style, .4);

    &:hover {
      color: toThemeColor($style);
    }
  }
}

@mixin focus-outline() {
  outline: var(--focus-outline);
  outline-offset: var(--focus-outline-offset);
}
